package ca.rttv.mooshroom.bucket.mixin;

import ca.rttv.mooshroom.bucket.K;

@org.spongepowered.asm.mixin.Mixin(net.minecraft.entity.passive.MooshroomEntity.class)abstract class X extends net.minecraft.entity.LivingEntity implements net.minecraft.entity.Bucketable{ private static net.minecraft.entity.data.TrackedData<java.lang.Boolean>B=net.minecraft.entity.data.DataTracker.registerData(X.class,net.minecraft.entity.data.TrackedDataHandlerRegistry.BOOLEAN);public X(net.minecraft.entity.EntityType<? extends net.minecraft.entity.LivingEntity>b, net.minecraft.world.World c){super(b,c);}@org.spongepowered.asm.mixin.injection.Inject(method="initDataTracker",at=@org.spongepowered.asm.mixin.injection.At("TAIL"))private void C(org.spongepowered.asm.mixin.injection.callback.CallbackInfo d){this.dataTracker.startTracking(B,false);}public boolean isFromBucket(){return this.dataTracker.get(B);}public void setFromBucket(boolean e){this.dataTracker.set(B,e);}public void copyDataToStack(net.minecraft.item.ItemStack f){net.minecraft.entity.Bucketable.copyDataToStack((net.minecraft.entity.passive.MooshroomEntity)(java.lang.Object)this,f);f.getOrCreateNbt().putUuid("UUID",uuid);}public void copyDataFromNbt(net.minecraft.nbt.NbtCompound g){net.minecraft.entity.Bucketable.copyDataFromNbt((net.minecraft.entity.passive.MooshroomEntity)(java.lang.Object)this,g);this.setUuid(g.getUuid("UUID"));}public net.minecraft.item.ItemStack getBucketItem(){return K.D.getDefaultStack();}public net.minecraft.sound.SoundEvent getBucketedSound(){return net.minecraft.sound.SoundEvents.ENTITY_MOOSHROOM_CONVERT;}@org.spongepowered.asm.mixin.injection.Inject(method="interactMob",at=@org.spongepowered.asm.mixin.injection.At("HEAD"),cancellable=true)private void interactMob(net.minecraft.entity.player.PlayerEntity h, net.minecraft.util.Hand i, org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable<net.minecraft.util.ActionResult>j){if(h.isSneaking())tryBucket(h,i,this).ifPresent(j::setReturnValue);}@org.spongepowered.asm.mixin.Unique private static<T extends net.minecraft.entity.Entity&net.minecraft.entity.Bucketable>java.util.Optional<net.minecraft.util.ActionResult>tryBucket(net.minecraft.entity.player.PlayerEntity h, net.minecraft.util.Hand i, T j){var k=h.getStackInHand(i);if(k.getItem()==net.minecraft.item.Items.BUCKET&&j.isAlive()){j.playSound(j.getBucketedSound(),1.0f,1.0f);var l=j.getBucketItem();j.copyDataToStack(l);var m=net.minecraft.item.ItemUsage.exchangeStack(k,h,l,false);h.setStackInHand(i, m);var world=j.world;if(!world.isClient){net.minecraft.advancement.criterion.Criteria.FILLED_BUCKET.trigger((net.minecraft.server.network.ServerPlayerEntity)h,l);}j.discard();return java.util.Optional.of(net.minecraft.util.ActionResult.success(world.isClient));}else{return java.util.Optional.empty();}}}
